React란 사용자 인터페이스를 쉽게 구축하기위한 자바스크립트 라이브러리 이며, CSR과 SPA에 최적화 되어있다.

● React 작동 원리
	- Virtual DOM
	DOM은 웹 브라우저가 코드를 이해할 수 있게 트리 구조로 파싱 하여 만든 객체이다.
	리액트는 이러한 DOM을 조작하는 방법으로 가상 돔(virtual dom)을 선택했다.
	동적으로 데이터가 변화했을 때 DOM에 복사본인 Virtual DOM을 생성한다.
	이후 직접적으로 DOM을 조작하는 것이 아니라, Virtual DOM과 원본 DOM을 비교해 
	변경된 부분의 DOM 만을 리렌더링 시킨다.
	( 이 과정을 맡는 함수 = ReactDOM.render() )
	
	- 리렌더링이 일어나는 경우
	1. Props가 변경되었을 때
	2. State가 변경되었을 때
	3. forceUpdate() 메서드가 실행됬을 때


● 장점 / 단점
	- React는 CSR과 SPA에 최적화 되어있기 때문에 CSR,SPA의 장단점이 포함된다
	
	- 장점
	○ SPA
		1. 페이지 새로고침이 없기 때문에 UX(User Experience)에 이점이 있다.
		2. 초기에 모든 컨텐츠를 불러오기 때문에 서버 요청 횟수가 줄어든다.
		이로 인해 서버의 부담이 줄어들고 빠른 응답이 가능하다.
	○ CSR
		1. 페이지 대부분의 렌더링이 클라이언트 측에서 이루어지기 때문에
		SSR(Server Side Rendering)보다 더 빠른 페이지 로딩이 가능하다
		2. 클라이언트 측에서 렌더링 되므로, 사용자와 상호작용되는 
		동적인 UI(User Interface)를 다양하게 만들 수 있다.
	
	○ Virtual DOM
		1. 페이지의 리렌더링이 최소화되어 빠른 렌더링이 제공된다.
	
	○ 컴포넌트 기반 개발
		1. 작은 단위의 컴포넌트를 조합하여 UI를 구성하기 때문에 코드의 재사용성과
		유지 보수성이 높다.
		
	○ 다른 프레임워크
		1. React는 프레임워크가 아닌 라이브러리이기 때문에 다른 프레임워크와 혼용 가능하다.

	○ ReactNative
		1. react사용에 익숙해지면 모바일 앱 개발 기술인 ReactNative에 접근하기 쉽다. 
		
	- 단점
	○ SPA
		1. 초기에 모든 컨텐츠를 가져오기 때문에 첫 로딩 시간이 오래 걸릴 수 있다
		( 앱 규모가 클수록)
		2. SEO(Search Engine Optimization) 최적화가 힘들다.
			- SEO = 검색 엔친 최적화
			- 사용자가 키워드를 입력하면 관련 페이지들을 볼 수 있게 제공해야한다
			이때 관련 페이지를 검색하는 역할을 하는 것이 웹 크롤러이다.
			하지만 React 기반 웹은 사용자가 접근하지 않는다면 비어있는 html페이지
			만 있기 때문에 웹 크롤러가 관련 페이지를 찾을 수 없다.
			
	○ CSR
		1. 클라이언트 측에서 데이터를 렌더링하기 때문에 보안에 더 많은 주의가 필요하다.



